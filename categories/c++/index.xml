<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on 洛舒luosuu的小站</title>
    <link>https://luosuu.github.io/categories/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on 洛舒luosuu的小站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyright © 2020</copyright>
    <lastBuildDate>Thu, 05 Mar 2020 19:25:41 +0800</lastBuildDate>
    
	<atom:link href="https://luosuu.github.io/categories/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C Struct Pointer</title>
      <link>https://luosuu.github.io/post/c-struct-pointer/</link>
      <pubDate>Thu, 05 Mar 2020 19:25:41 +0800</pubDate>
      
      <guid>https://luosuu.github.io/post/c-struct-pointer/</guid>
      <description>&lt;p&gt;C语言中的结构体指针，曾在第一学期坑过我&lt;/p&gt;
&lt;h2 id=&#34;代码&#34;&gt;代码&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;typedef&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; student
{
	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; id;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; name[&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;];
	&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; chinese;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; math;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; english;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;float&lt;/span&gt; sum;
}student;

&lt;span style=&#34;color:#75715e&#34;&gt;//就像一个普通的变量一样，直接传指针就可以进行相应的操作，指针存储的是结构体首地址
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;swap&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; student&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;a, &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; student&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;b)
{
    &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; student temp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;a;
    &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;b;
    &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; temp;
};
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;结构体的操作一般都是以指针的方式进行，有的结构体会很大，直接进行拷贝操作代价太高，因此在函数的传参中，结构体一般也是通过指针的形式传经函数。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Console Game</title>
      <link>https://luosuu.github.io/post/console-game/</link>
      <pubDate>Thu, 05 Mar 2020 19:18:53 +0800</pubDate>
      
      <guid>https://luosuu.github.io/post/console-game/</guid>
      <description>&lt;p&gt;记录一下第一学期假期时跟着Github@guyaqi学长写的控制台小玩意&lt;/p&gt;
&lt;h2 id=&#34;代码&#34;&gt;代码&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;windows.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;putFrame&lt;/span&gt;(WORD wAttributes,&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;a);
&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;changeFrame&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, WORD wAttributes);

&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;()
{
	HANDLE handle;
	handle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GetStdHandle(STD_OUTPUT_HANDLE);
	CONSOLE_CURSOR_INFO cursor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;,FALSE };&lt;span style=&#34;color:#75715e&#34;&gt;//隐藏光标
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	SetConsoleCursorInfo(handle, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;cursor);
	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; position &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; a[][&lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
	{
		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1. White &amp;amp; Green&amp;#34;&lt;/span&gt;,
		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2. Red &amp;amp; Grey&amp;#34;&lt;/span&gt;,
		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3. White &amp;amp; Black&amp;#34;&lt;/span&gt;,
		&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4. White &amp;amp; Blue&amp;#34;&lt;/span&gt;
	};

	printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;----------------------------------&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n\n\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
	printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;            Colors&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
	putFrame(FOREGROUND_RED &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_GREEN &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_BLUE &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_GREEN &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_INTENSITY, &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;a);
	putFrame(FOREGROUND_INTENSITY &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_RED &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_BLUE &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_GREEN &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_RED &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_GREEN &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_RED,&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(a&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;));
	putFrame(FOREGROUND_INTENSITY&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_RED &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_GREEN &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_BLUE,&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(a&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;));
	putFrame(FOREGROUND_RED &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_GREEN &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_BLUE &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_BLUE,&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(a&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;));

	SetConsoleTextAttribute(handle, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
	printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;);
	printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;       &amp;#34;&lt;/span&gt;);
	SetConsoleTextAttribute(handle, FOREGROUND_RED &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_GREEN &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_BLUE &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_GREEN &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_INTENSITY);
	printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;This is a test text.&amp;#34;&lt;/span&gt;);

	&lt;span style=&#34;color:#75715e&#34;&gt;//交互
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (true)
	{
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;GetAsyncKeyState(VK_UP) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x8000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; position &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; state &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
		{
			position&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;;
			state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
		}
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;GetAsyncKeyState(VK_DOWN) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x8000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; position &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; state &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
		{
			position&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;;
			state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
		}
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;GetAsyncKeyState(VK_UP) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x8000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; position) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;GetAsyncKeyState(VK_DOWN) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x8000&lt;/span&gt;))
		{
			state &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
		}
		&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (position &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; state &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) changeFrame(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,FOREGROUND_RED &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_GREEN &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_BLUE &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_GREEN &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_INTENSITY);
		&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (position &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; state &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) changeFrame(&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, FOREGROUND_INTENSITY &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_RED &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_BLUE &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_GREEN &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_RED &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_GREEN &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_RED);
		&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (position &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; state &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) changeFrame(&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, FOREGROUND_INTENSITY
			&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_RED &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_GREEN &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_BLUE);
		&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (position &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; state &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)changeFrame(&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, FOREGROUND_RED &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_GREEN &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_BLUE &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; BACKGROUND_BLUE);
	}
	system(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;pause&amp;#34;&lt;/span&gt;);
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;putFrame&lt;/span&gt;(WORD wAttributes, &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; a[])
{
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
	printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;        &amp;#34;&lt;/span&gt;);
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), wAttributes);
	printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;,a);
}

&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;changeFrame&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; a, WORD wAttributes)
{
	COORD coord;
	coord.X &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;;
	coord.Y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)
	{
		coord.Y &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
		SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);
		SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
		printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  &amp;#34;&lt;/span&gt;);
	}
	coord.X &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;;
	coord.Y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), FOREGROUND_INTENSITY
		&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_RED &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_GREEN &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; FOREGROUND_BLUE);
	printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-&amp;gt;&amp;#34;&lt;/span&gt;);


	coord.X &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;;
	coord.Y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), coord);
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), wAttributes);
	printf(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;This is a test text.&amp;#34;&lt;/span&gt;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>